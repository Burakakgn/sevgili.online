document.addEventListener('DOMContentLoaded', () => {
    const cards = document.querySelectorAll('.card');
    const nextButtons = document.querySelectorAll('.next-button');
    const yesButton = document.getElementById('yesButton');
    const noButton = document.getElementById('noButton');
    const responseMessage = document.getElementById('responseMessage');
    const backgroundMusic = document.getElementById('backgroundMusic');
    

    let currentCardIndex = 0;
    let currentYesScale = 1.0; // <-- YENÄ° EKLENECEK SATIR (1.0 = %100 boyut)
    // Ä°lk kartÄ± gÃ¶ster (HTML'de hidden class'Ä± olmadÄ±ÄŸÄ±ndan zaten gÃ¶rÃ¼necek)
    // Ä°lk kartÄ±n butonu iÃ§in olay dinleyicisi ekle
    if (nextButtons.length > 0) {
        nextButtons[0].addEventListener('click', () => {
            showNextCard();
            // KullanÄ±cÄ± ilk kez etkileÅŸimde bulunduÄŸunda mÃ¼ziÄŸi baÅŸlat
            if (backgroundMusic.paused) {
                backgroundMusic.play().catch(e => console.error("MÃ¼zik Ã§alma hatasÄ±:", e));
            }
        });
    }

    // DiÄŸer "Devam Et" butonlarÄ± iÃ§in olay dinleyicileri
    for (let i = 1; i < nextButtons.length; i++) {
        nextButtons[i].addEventListener('click', showNextCard);
    }

    yesButton.addEventListener('click', () => {
        responseMessage.innerHTML = "ðŸŽ‰Ä°yi ki varsÄ±n ðŸŽ‰";
        responseMessage.classList.remove('hidden');
        responseMessage.classList.add('visible');
        hideAllCardsExceptMessage();
        backgroundMusic.volume = 0.5; // MÃ¼ziÄŸin sesini kÄ±s
        yesButton.style.display = 'none';
        noButton.style.display = 'none';
    });

   noButton.addEventListener('click', (event) => {
        event.preventDefault();

        // --- YENÄ° KOD: 'Evet' BUTONUNU DA ÃœST KATMANA TAÅžI ---
        
        // 'Evet' butonunun 'position' stilini kontrol et
        if (yesButton.style.position !== 'absolute') {
            // EÄŸer 'absolute' deÄŸilse, bu 'HayÄ±r'a ilk tÄ±klamadÄ±r.
            
            // 1. 'Evet' butonunun ekrandaki mevcut konumunu al
            const yesRect = yesButton.getBoundingClientRect();

            // 2. 'Evet' butonunu da body'e taÅŸÄ±
            document.body.appendChild(yesButton);
            
            // 3. Konumunu 'absolute' yap ve z-index ile en Ã¼ste al
            yesButton.style.position = 'absolute';
            yesButton.style.zIndex = '1000'; // 'Evet' butonu Ã¼stte
            
            // 4. AldÄ±ÄŸÄ±mÄ±z konuma sabitle (bÃ¶ylece yerinden oynamaz)
            yesButton.style.top = yesRect.top + 'px';
            yesButton.style.left = yesRect.left + 'px';
            
            // 5. BÃ¼yÃ¼menin merkezden olmasÄ±nÄ± garantile
            yesButton.style.transformOrigin = 'center center';
        }
        // --- YENÄ° KOD BÄ°TTÄ° ---


        // --- 'HAYIR' BUTONU IÅžINLANMA KODU (Bu kÄ±sÄ±m zaten vardÄ±) ---
        
        // 'HayÄ±r' butonunu body'e taÅŸÄ±
        document.body.appendChild(noButton);
        noButton.style.position = 'absolute';
        noButton.style.zIndex = '1001'; // 'HayÄ±r' butonu 'Evet'in de Ã¼stÃ¼nde

        // ... (viewportWidth, randomX vb. hesaplamalar)
        const viewportWidth = window.innerWidth;
        const viewportHeight = window.innerHeight;
        const buttonWidth = noButton.offsetWidth;
        const buttonHeight = noButton.offsetHeight;
        const maxX = viewportWidth - buttonWidth;
        const maxY = viewportHeight - buttonHeight;
        const randomX = Math.floor(Math.random() * maxX);
        const randomY = Math.floor(Math.random() * maxY);

        // 'HayÄ±r' butonunu Ä±ÅŸÄ±nla
        noButton.style.left = randomX + 'px';
        noButton.style.top = randomY + 'px';
        
        
        // --- 'EVET' BUTONU BÃœYÃœTME KODU (Bu kÄ±sÄ±m da zaten vardÄ±) ---
        
        // 'Evet' butonunun Ã¶lÃ§eÄŸini %20 (0.2) bÃ¼yÃ¼t.
        currentYesScale += 0.6; 
        
        // Yeni Ã¶lÃ§eÄŸi 'Evet' butonuna CSS 'transform' Ã¶zelliÄŸi ile uygula.
        yesButton.style.transform = `scale(${currentYesScale})`;
    });

    function showNextCard() {
        if (currentCardIndex < cards.length) {
            // Mevcut kartÄ± gizle
            cards[currentCardIndex].classList.add('hidden');

            currentCardIndex++;

            // Bir sonraki kartÄ± gÃ¶ster
            if (currentCardIndex < cards.length) {
                cards[currentCardIndex].classList.remove('hidden');
            }
        }
    }

    function hideAllCardsExceptMessage() {
        cards.forEach(card => {
            card.classList.add('hidden');
        });
        document.querySelector('h1').classList.add('hidden'); // BaÅŸlÄ±ÄŸÄ± da gizle
    }
});